[build-system]
build-backend = "setuptools.build_meta"
requires = ["setuptools >= 64", "setuptools-scm>=8"]

[tool.setuptools_scm]
root = ".."


[project]
name = "aiq_aira"
dynamic = ["version"]
dependencies = [
  "agentiq>=1.1.0a1",
  "agentiq-langchain>=1.1.0a1",
  "aiohappyeyeballs==2.4.4",
  "aiohttp",
  "aiosignal==1.3.2",
  "annotated-types==0.7.0",
  "anyio==4.8.0",
  "arize-phoenix~=6.1",
  "async-timeout==5.0.1",
  "attrs==25.1.0",
  "certifi==2025.1.31",
  "charset-normalizer==3.4.1",
  "distro==1.9.0",
  "exceptiongroup==1.2.2",
  "frozenlist==1.5.0",
  "h11>=0.16.0",
  "httpcore",
  "httpx",
  "litellm",
  "idna==3.10",
  "jiter==0.8.2",
  "jsonpatch==1.33",
  "jsonpointer==3.0.0",
  "langchain-core",
  "langchain-openai",
  "langchain-nvidia-ai-endpoints",
  "langgraph==0.2.69",
  "langgraph-checkpoint==2.0.10",
  "langgraph-sdk==0.1.51",
  "langsmith==0.3.4",
  "msgpack==1.1.0",
  "multidict==6.1.0",
  "openai==1.61.0",
  "orjson==3.10.15",
  "packaging==24.2",
  "propcache==0.2.1",
  "pydantic",
  "pydantic_core",
  "PyYAML==6.0.2",
  "redis==5.2.1",
  "regex==2024.11.6",
  "requests==2.32.3",
  "requests-toolbelt==1.0.0",
  "sniffio==1.3.1",
  "tenacity==9.0.0",
  "tiktoken==0.8.0",
  "tqdm==4.67.1",
  "typing_extensions==4.12.2",
  "urllib3==2.3.0",
  "xmltodict==0.14.2",
  "yarl==1.18.3",
  "zstandard==0.23.0",
  "colorama",
  "openinference-instrumentation-langchain",
  "openinference-instrumentation-openai",
]
requires-python = ">=3.12"
description = "AIRA AI-Q example"
keywords = ["ai", "rag", "agents"]
classifiers = ["Programming Language :: Python"]

[project.optional-dependencies]
dev = [
    "aiohttp>=3.11.14",
    "docker>=7.1.0",
    "pytest>=8.3.5",
    "pytest-aiohttp>=1.1.0",
    "pytest-asyncio>=0.25.3",
    "pytest-dotenv>=0.5.2",
]

[tool.uv.sources]
aiq = { path = "../ai-query-engine", editable = true }

[tool.uv]
managed = true

[project.entry-points.'aiq.plugins']
aiq_aira = "aiq_aira.register"

# ===== flake8 Config =====
[tool.flake8]
filename = ["*.py"]

max-line-length = 100
max-doc-length = 100


# ===== yapf Config =====
[tool.yapf]
based_on_style = "pep8"
column_limit = 100
split_all_top_level_comma_separated_values = true
join_multiple_lines = true
indent_dictionary_value = true

[tool.pytest.ini_options]
env_files = [".env", "test.env"]
